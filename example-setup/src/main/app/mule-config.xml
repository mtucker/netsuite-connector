<?xml version="1.0" encoding="UTF-8"?>
<!--

    Mule NetSuite Cloud Connector

    Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com

    The software in this package is published under the terms of the CPAL v1.0
    license, a copy of which has been included with this distribution in the
    LICENSE.txt file.

-->
	
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
       xmlns:netsuite="http://repository.mulesoft.org/releases/org/mule/modules/mule-module-netsuite"
       xmlns:s3="http://www.mulesoft.org/schema/mule/s3" 
       xmlns:json="http://www.mulesoft.org/schema/mule/json"
       xmlns:mongodb="http://www.mulesoft.org/schema/mule/mongodb"
       xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:http="http://www.mulesoft.org/schema/mule/http"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://repository.mulesoft.org/releases/org/mule/modules/mule-module-netsuite http://repository.mulesoft.org/releases/org/mule/modules/mule-module-zuora/2.0/mule-netsuite.xsd
       http://www.mulesoft.org/schema/mule/core    http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
       http://www.mulesoft.org/schema/mule/json    http://www.mulesoft.org/schema/mule/json/3.1/mule-json.xsd
       http://www.mulesoft.org/schema/mule/s3      http://www.mulesoft.org/schema/mule/s3/1.0/mule-s3.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.1/mule-scripting.xsd
       http://www.mulesoft.org/schema/mule/mongodb http://www.mulesoft.org/schema/mule/mongodb/3.1/mule-mongodb.xsd 
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.0/mule-http.xsd">
	
 	
 	<netsuite:config name="NetsuiteTest" 
    	account="${netsuiteAccount}"
		password="${netsuitePassword}" 
		email="${netsuiteEmail}"
		roleId="${netsuiteRoleId}" />     
 	<s3:config accessKey="${s3AccessKey}" secretKey="${s3SecretKey}" />
 	<mongodb:connector name="mongodb" database="${mongoDatabase}" hostname="${mongoHostname}" />

	<flow name="CreateEmployeePhoneUpdatesFlow">	
		<description>Creates some record update document in the mongodb</description>
		<http:inbound-endpoint host="localhost" port="9090"
			path="netsuite-demo-setup-create-employee-phone-updates" />
		<scripting:component>
			<scripting:script engine="groovy">
					return [ '{ "email": "chris@foobar.com", "officePhone": "459-99865"}', 
					         '{ "email": "mary@foobar.com", "officePhone": "126-650055" }', 
					         '{ "email": "john@foobar.com", "officePhone": "359-5659-0100" }' ]
            </scripting:script>
			</scripting:component>
		<collection-splitter/>
		<mongodb:outbound-endpoint collection="employeePhoneUpdates"/>
		<expression-transformer>
			<return-argument evaluator="string" expression="Employee Phone Updates Created Sucesfully" />
		</expression-transformer>
	</flow>
	
	<flow name="CreateS3BucketFlow">
		<description>Creates a bucket in S3 for testing</description>
		<http:inbound-endpoint host="localhost" port="9090"
			path="netsuite-demo-setup-create-bucket" />
		<logger message="${s3BucketName}" level="ERROR"/>
		<s3:create-bucket bucketName="${s3BucketName}" />
		<logger message="#[payload]" level="ERROR"/>
		<expression-transformer>
			<return-argument evaluator="string" expression="Bucket Created Sucesfully" />
		</expression-transformer>
	</flow>

	<flow name="UploadS3ImageFlow">
		<description>Uploads an image</description>
		<http:inbound-endpoint host="localhost" port="9090"
			path="netsuite-demo-setup-upload-s3-image" />
		<outbound-endpoint
			address="http://www.zumbrovalley.net/ArcadeOptics/trackball/ms009s_top.jpg" />
		<s3:create-object content="#[payload]" bucketName="${s3BucketName}"
			key="image.jpg" acl="PUBLIC_READ" />
		<expression-transformer>
			<return-argument evaluator="string" expression="Image Uploaded Sucesfully" />
		</expression-transformer>
	</flow>
	
	<flow name="CreateEmployeesFlow">
		<description>Creates some employees in Netsuite for testing.
		</description>
		<http:inbound-endpoint host="localhost" port="9090" path="netsuite-demo-setup-add-employees" />
		<netsuite:add-record recordType="EMPLOYEE" >
			<netsuite:attributes>
				<netsuite:attribute key="firstName" value="Chris" />
				<netsuite:attribute key="lastName" value="C" />
				<netsuite:attribute key="email" value="chris@foobar.com" />
			</netsuite:attributes>
		</netsuite:add-record>
		<netsuite:add-record recordType="EMPLOYEE" >
			<netsuite:attributes>
				<netsuite:attribute key="firstName" value="Mary" />
				<netsuite:attribute key="lastName" value="M" />
				<netsuite:attribute key="email" value="mary@foobar.com" />
			</netsuite:attributes>
		</netsuite:add-record>
		<netsuite:add-record recordType="EMPLOYEE">
			<netsuite:attributes>
					<netsuite:attribute key="firstName" value="John" />
				<netsuite:attribute key="lastName" value="J" />
				<netsuite:attribute key="email" value="john@foobar.com" />
			</netsuite:attributes>
		</netsuite:add-record>
		<expression-transformer>
			<return-argument evaluator="string" expression="Employees Created Succesfuly" />
		</expression-transformer>
	</flow>
	
	<flow name="CreateAttachmentsFolderFlow">
		<description>Creates a folder for attachments in netsuite</description>
		<http:inbound-endpoint host="localhost" port="9090" path="netsuite-demo-setup-add-folder" />
		<netsuite:add-record recordType="FOLDER" >
			<netsuite:attributes>
				<netsuite:attribute key="name" value="attachments" />
				<netsuite:attribute key="description" value="This folder contains attachements created by the search-employee-and-attach-file demo" />
			</netsuite:attributes>
		</netsuite:add-record>
		<expression-transformer>
			<return-argument evaluator="string" expression="Folder Created Succesfuly" />
		</expression-transformer>
	</flow>
</mule>